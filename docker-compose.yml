version: '1.0'

services: 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    ports: 
      - 9200:9200
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - xpack.monitoring.collection.enabled=true
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.0
    ports: 
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - elastic
      - kibana

  sql-server: 
    image: mcr.microsoft.com/azure-sql-edge:latest
    cap_add: [ 'SYS_PTRACE' ]
    environment:
      - "ACCEPT_EULA=1"
      - "MSSQL_SA_PASSWORD=Str#ng_Passw#rd"
    ports: 
      - 1433:1433
    networks: 
      - shop-env

  snowflake-factory:
    image: snowflake-factory
    ports: 
      - 8081:80
    networks: 
      - snowflake-id  
    expose: 
      - "80"

  shop-backend-api:
    image: shop-backend-api
    ports: 
      - 8082:80
    networks: 
      - shop-env  
      - snowflake-id
      - kibana
    expose: 
      - "80"
    depends_on:
      - sql-server
      - snowflake-factory
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

  shop-frontend:
    image: shop-frontend
    ports: 
      - 8083:80
    networks: 
      - shop-env
    depends_on:
      - shop-backend-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

networks:
  shop-env:
  snowflake-id:
  kibana:
  elastic:
    driver: bridge
